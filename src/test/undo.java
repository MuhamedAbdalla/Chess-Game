/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package test;

import javax.swing.Icon;
import javax.swing.ImageIcon;
import JChess.Pieces.*;
import java.io.File;
import javafx.embed.swing.JFXPanel;
import javafx.scene.media.Media;
import javafx.scene.media.MediaPlayer;
import static test.Table.*;

/**
 *
 * @author 20114
 */
public class undo extends javax.swing.JFrame {

    /**
     * Creates new form undo
     */
    public undo() {
        initComponents();
        jLabel1.setText("Is player" + player + " agree?");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kButton2 = new keeptoo.KButton();
        kButton4 = new keeptoo.KButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        kButton2.setText("YES");
        kButton2.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 14)); // NOI18N
        kButton2.setkBackGroundColor(new java.awt.Color(51, 51, 51));
        kButton2.setkBorderRadius(40);
        kButton2.setkEndColor(new java.awt.Color(51, 51, 51));
        kButton2.setkHoverEndColor(new java.awt.Color(0, 102, 102));
        kButton2.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        kButton2.setkHoverStartColor(new java.awt.Color(0, 102, 102));
        kButton2.setkPressedColor(new java.awt.Color(0, 102, 102));
        kButton2.setkSelectedColor(new java.awt.Color(0, 102, 102));
        kButton2.setkStartColor(new java.awt.Color(51, 51, 51));
        kButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(kButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 340, 140, -1));

        kButton4.setText("NO");
        kButton4.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 14)); // NOI18N
        kButton4.setkBackGroundColor(new java.awt.Color(51, 51, 51));
        kButton4.setkBorderRadius(40);
        kButton4.setkEndColor(new java.awt.Color(51, 51, 51));
        kButton4.setkHoverEndColor(new java.awt.Color(0, 102, 102));
        kButton4.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        kButton4.setkHoverStartColor(new java.awt.Color(0, 102, 102));
        kButton4.setkPressedColor(new java.awt.Color(0, 102, 102));
        kButton4.setkSelectedColor(new java.awt.Color(0, 102, 102));
        kButton4.setkStartColor(new java.awt.Color(51, 51, 51));
        kButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(kButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 340, 140, -1));

        jLabel1.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(240, 240, 240));
        jLabel1.setText("Is player1 agree?");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 260, 150, 40));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/test/HNN.PNG"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 550, 210));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/test/HHH.PNG"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 0, 310, 310));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/test/HHH.PNG"))); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 210, 310, 210));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/test/HHH.PNG"))); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 210, 310, 210));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/test/HHH.PNG"))); // NOI18N
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 310, 310));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void kButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton2ActionPerformed
        // TODO add your handling code here:
        setPlayerTurn();
        int num = undo1.peek().getKey(), renum = undo1.peek().getValue().getKey();
        Icon icon_res = undo1.peek().getValue().getValue();
        int row1 = undo2.peek().getKey(), col1 = undo2.peek().getValue(), row2 = undo3.peek().getKey(), col2 = undo3.peek().getValue();
        int nplay = player;
        undo1.pop();
        undo2.pop();
        undo3.pop();
        String now_icon = "";
        idx1 = row2;
        idx2 = col2;
        if (ispawn) {
            board[row1][col1] = (nplay == 1 ? 6 : 66);
        }
        if (board[row1][col1] == 6 || board[row1][col1] == 66) {
            pawn paw = new pawn();
            now_icon = paw.getPieceIcon(player, now_icon, Pieces.Pawn);
        } else if (board[row1][col1] == 1 || board[row1][col1] == 11) {
            Rook rook = new Rook();
            now_icon = rook.getPieceIcon(player, now_icon, Pieces.Rook);
        } else if (board[row1][col1] == 3 || board[row1][col1] == 33) {
            Bishop bishop = new Bishop();
            now_icon = bishop.getPieceIcon(player, now_icon, Pieces.Bishop);
        } else if (board[row1][col1] == 4 || board[row1][col1] == 44) {
            Queen queen = new Queen();
            now_icon = queen.getPieceIcon(player, now_icon, Pieces.Queen);
        } else if (board[row1][col1] == 2 || board[row1][col1] == 22) {
            Knight knight = new Knight();
            now_icon = knight.getPieceIcon(player, now_icon, Pieces.Knight);
        } else if (board[row1][col1] == 5 || board[row1][col1] == 55) {
            King king = new King();
            now_icon = king.getPieceIcon(player, now_icon, Pieces.King);
        }
        JFXPanel pq = new JFXPanel();
        String url = new File("E:\\pic\\piece_move.wav").toURI().toString();
        new MediaPlayer(new Media(url)).play();
        Icon nowcon = new ImageIcon(now_icon);
        chess[row2][col2].setIcon(nowcon);
        chess[row1][col1].setIcon(icon_res);
        grid[row2][col2] = player;
        grid[row1][col1] = num;
        board[row2][col2] = board[row1][col1];
        board[row1][col1] = renum;
        Operation_Conter--;
        setGrid(grid);
        SetGreen();
        this.hide();
        King king = new King();
        process(king);
        SetGreen();
    }//GEN-LAST:event_kButton2ActionPerformed

    private void kButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton4ActionPerformed
        // TODO add your handling code here:
        this.hide();
    }//GEN-LAST:event_kButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(undo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(undo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(undo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(undo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new undo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private keeptoo.KButton kButton2;
    private keeptoo.KButton kButton4;
    // End of variables declaration//GEN-END:variables
}
